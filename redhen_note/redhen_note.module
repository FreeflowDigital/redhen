<?php

/**
 * @file
 * Redhen Notes main module
 *
 */

/**
 * Implements hook_entity_info().
 */
function redhen_note_entity_info() {
  return array(
    'redhen_note' => array(
      'label' => t('Note'),
      'plural label' => t('Notes'),
      'controller class' => 'EntityAPIController',
      'metadata controller class' => 'RedhenNoteMetadataController',
      'entity class' => 'RedhenNote',
      'base table' => 'redhen_note',
      'fieldable' => TRUE,
      'entity keys' => array(
        'id' => 'note_id',
      ),
//      'bundle keys' => array(
//        'bundle' => 'note_id',
//      ),
      'bundles' => array(
        'redhen_note' => array(
          'label' => 'Notes',
          'admin' => array(
            'path' => 'admin/structure/redhen/redhen_notes',
            'access arguments' => array('administer redhen note entities'),
          ),
        ),
      ),
      'view modes' => array(
        'full' => array(
          'label' => t('Full note'),
          'custom settings' => FALSE,
        ),
      ),
      'uri callback' => 'entity_class_uri',
      'token type' => 'redhen_note',
      'module' => 'redhen_note',
      'label callback' => 'entity_class_label'
    ),
  );
}

function redhen_note_menu() {
  $items = array();

  $items['admin/structure/redhen/redhen_notes'] = array(
    'title' => 'Notes',
    'description' => 'Manage Redhen Notes structure',
    'page callback' => 'redhen_note_admin_page',
    'access arguments' => array('administer redhen notes'), //TODO: add access control
  );


  // contact notes
  $items['redhen/contact/%redhen_contact/notes'] = array(
    'title' => 'Notes',
    'page callback' => 'redhen_note_notes_page',
    'page arguments' => array(2, 'redhen_contact'),
    'access callback' => 'redhen_contact_access',
    'access arguments' => array('view', 2),
    'type' => MENU_LOCAL_TASK,
  );
  $items['redhen/contact/%redhen_contact/notes/add'] = array(
    'title' => 'Add Note',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('redhen_note_form', 2, 'redhen_contact'),
    'file' => 'includes/redhen_note.forms.inc',
    'access callback' => 'redhen_contact_access',
    'access arguments' => array('edit', 2),
    'type' => MENU_LOCAL_ACTION,
  );

  // org notes
  $items['redhen/org/%redhen_org/notes'] = array(
    'title' => 'Notes',
    'page callback' => 'redhen_note_notes_page',
    'page arguments' => array(2, 'redhen_org'),
    'access callback' => 'redhen_org_access',
    'access arguments' => array('view', 2),
    'type' => MENU_LOCAL_TASK,
  );
  $items['redhen/org/%redhen_org/notes/add'] = array(
    'title' => 'Add Note',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('redhen_note_form', 2, 'redhen_org'),
    'file' => 'includes/redhen_note.forms.inc',
    'access callback' => 'redhen_org_access',
    'access arguments' => array('edit', 2),
    'type' => MENU_LOCAL_ACTION,
  );

  return $items;
}

function redhen_note_notes_page($entity, $entity_type) {

  list($entity_id,,) = entity_extract_ids($entity_type, $entity);

  $query = new EntityFieldQuery();
  $query
    ->entityCondition('entity_type', 'redhen_note')
    ->propertyCondition('entity_id', $entity_id);
  $result = $query->execute();

  $out = '<h3>List of notes</h3>';

  foreach ($result as $notes) {
    foreach($notes as $note) {
      $note_entity = entity_load('redhen_note', array($note->note_id));
      $note_field = $note_entity[$note->note_id]->field_text_field[LANGUAGE_NONE][0]['value'];
      $out .= 'Note: ' . $note->note_id . ' - ' . $note_field . '<br/>';
    }
  }

  return $out;
}

function redhen_note_admin_page() {
  return 'Administrate Redhen fNote fields and display';
}
