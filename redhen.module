<?php

/**
 * @file
 * Defines basic functionality common to all parts of the Redhen CRM.
 */

// Definitions
define('REDHEN_STATE_ACTIVE', 1);
define('REDHEN_STATE_ARCHIVED', 0);

function redhen_menu() {
  $items = array();

  // Menu items that are basically just menu blocks.
  $items['redhen'] = array(
    'title' => 'RedHen CRM',
    'description' => 'RedHen CRM home',
    'weight' => -8,
    'page callback' => 'redhen_admin_menu_block_page',
    'menu_name' => 'navigation',
    'access arguments' => array('access redhen'),
    'file' => 'includes/redhen.admin.inc',
  );
  $items['admin/structure/redhen'] = array(
    'title' => 'RedHen CRM',
    'description' => 'Administer RedHen CRM items, such as contacts, organizations, memberships, etc.',
    'weight' => -8,
    'page callback' => 'redhen_admin_menu_block_page',
    'menu_name' => 'navigation',
    'access arguments' => array('administer redhen'),
    'file' => 'includes/redhen.admin.inc',
    'menu_name' => 'management',
  );
  $items['admin/config/redhen'] = array(
    'title' => 'Redhen CRM Settings',
    'description' => 'Configure Redhen CRM.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('redhen_settings'),
    'access arguments' => array('administer redhen'),
    'file' => 'includes/redhen.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function redhen_permission() {
  return array(
    'administer redhen' =>  array(
      'title' => t('Administer Redhen'),
      'description' => t('Perform administration tasks for my redhen.'),
    ),
    'access redhen' =>  array(
      'title' => t('Access Redhen'),
      'description' => t('Access Redhen CRM.'),
    ),
  );
}

/**
 * Wrapper for devel_load_object which is in an include file.
 */
function redhen_devel_load_object($type, $object, $name = NULL) {
  if (module_exists('devel')) {
    module_load_include('inc', 'devel', 'devel.pages');
    return devel_load_object($type, $object, $name);
  }
}

/**
 * Wrapper function for devel_render_object which is in an include file.
 */
function redhen_devel_render_object($type, $object, $name = NULL) {
  if (module_exists('devel')) {
    module_load_include('inc', 'devel', 'devel.pages');
    return devel_render_object($type, $object, $name);
  }
}

/**
 * Implements hook_theme().
 */
function redhen_theme() {
  return array(
    'redhen_property_field' => array(
      'variables' => array(
        'label_hidden' => FALSE,
        'title_attributes' => NULL,
        'label' => '',
        'content_attributes' => NULL,
        'items' => array(),
        'item_attributes' => array(array()),
        'classes' => '',
        'attributes' => '',
      )
    ),
  );
}

/**
 * Theme function for redhen properties. Simple wrapper around theme_field
 * that sets default values and ensures proeprties render consistently with
 * fields.
 */
function theme_redhen_property_field($variables) {
  return theme_field($variables);
}

/**
 * Executes a filter query return a result set filtered by the provided
 * attributes. Used to filter Redhen entity list pages.
 *
 * @param string $entity_type
 * @param array $header
 *   Header array for sorting. Should match the table header used in output.
 * @param string $bundle
 * @param array $properties
 * @param array $fields
 * @param int $items_page
 *
 * @return array
 */
function redhen_filter_query($entity_type, $header, $bundle = '', $properties = array(), $fields = array(), $items_page = 10) {
  $query = new EntityFieldQuery();

    // build the query
  $query
    ->entityCondition('entity_type', $entity_type, '=')
    ->tablesort($header)
    ->pager($items_page);

  // set the bundle
  if (!empty($bundle)) {
    $query->entityCondition('bundle', $bundle, '=');
  }

  // add prop filters
  foreach($properties as $key => $value) {

    $property_info = entity_get_all_property_info($entity_type);
    if ($value != '') {
      //Processing for date ranges
      if ($property_info[$key]['type'] == 'date') {
        if ($value['from'] != '') {
          $query->propertyCondition($key, strtotime($value['from']), '>=');
          //Add 24 hours for full day search
          $query->propertyCondition($key, strtotime($value['to']) + 86400, '<=');
        }
      }
      else {
        $query->propertyCondition($key, $value);
      }
    }
  }

  // add field filters
  foreach($fields as $key => $value) {
    $field_info = field_info_field($key);

    $search_field = ($field_info['type'] == 'taxonomy_term_reference') ? 'tid' : 'value';

    if ($value != '') {
      $query->fieldCondition($key, $search_field, $value, 'CONTAINS');
    }
  }

  return $query->execute();
}

/**
 * Helper to return an array of Redhen entity types keyed by entity type, value
 * of the entity path. Useful for defining menu callbacks.
 *
 * @return array
 */
function redhen_entity_types() {
  return array(
    'redhen_org' => 'org',
    'redhen_contact' => 'contact'
  );
}
