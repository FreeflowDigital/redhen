<?php

/**
 * Implements hook_menu().
 */
function redhen_dedupe_menu() {
  $items['redhen/dedupe'] = array(
    'title' => 'Find duplicate contacts',
    'page callback' => 'redhen_dedupe_list_page',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['redhen/dedupe/merge/%'] = array(
    'title' => 'Select a primary contact',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('redhen_dedupe_merge_form', 3),
    'access arguments' => array('access content'),
    'file' => 'includes/redhen_dedupe.form.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Page callback for listing duplicate contacts.
 *
 * @return array
 *   Render array for a table of duplicates.
 */
function redhen_dedupe_list_page() {
  $results = redhen_dedupe_get_duplicates();
  if (!empty($results)) {
    $rows = array();
    foreach ($results as $result) {
      $rows[] = array(
        $result->first_name,
        $result->last_name,
        $result->count,
        l(t('merge'), 'redhen/dedupe/merge/' . $result->ids),
      );
    }

    return theme('table', array(
      'header' => array(
        t('First name'),
        t('Las name'),
        t('Count'),
        '',
      ),
      'rows' => $rows,
    ));
  }
  else {
    return t('There are no duplicate contacts, congratulations!');
  }
}

/**
 * Get duplicate contacts.
 *
 * @return array
 *   Array of objects containing first, last, and ids.
 */
function redhen_dedupe_get_duplicates() {
  $query = db_select('redhen_contact', 'rc');
  $query->addField('rc', 'first_name');
  $query->addField('rc', 'last_name');
  $query->groupBy('first_name');
  $query->groupBy('last_name');
  $query->addExpression('COUNT(*)', 'count');
  $query->addExpression('GROUP_CONCAT(contact_id SEPARATOR \',\')', 'ids');
  $query->havingCondition('count', '1', '>');

  return $query->execute()->fetchAll();
}
