<?php

/**
 * @file
 * Install, update and uninstall functions for the redhen relations module.
 */


/**
 * Implements hook_schema().
 */
function redhen_relation_schema() {
  $schema['redhen_relation_role'] = array(
    'description' => 'RedHen Relation Role.',
    'fields' => array(
      'redhen_relation_role_id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The redhen relation role ID.',
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'description' => 'The machine name of the redhen relation role.',
      ),
      'label' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'description' => 'The human readable name of the redhen relation role.',
      ),
      'default_role' => array(
        'type' => 'int',
        'size' => 'tiny',
        'not null' => FALSE,
        'default' => 1,
        'description' => 'Default role.',
      ),
      'permissions' => array(
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of permissions.',
      ),
      'status' => array(
        'type' => 'int',
        'not null' => TRUE,
        // Set the default to ENTITY_CUSTOM without using the constant as it is
        // not safe to use it at this point.
        'default' => 0x01,
        'size' => 'tiny',
        'description' => 'The exportable status of the entity.',
      ),
      'module' => array(
        'description' => 'The name of the providing module if the entity has been defined in code.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
    ),
    'indexes' => array(
      'redhen_relation_role_name' => array('name'),
      'redhen_relation_role_default_role' => array('default_role'),
    ),
    'primary key' => array('redhen_relation_role_id'),
    'unique keys' => array(
      'name' => array('name'),
    ),
  );

  return $schema;
}
/**
 * Implements hook_install().
 */
function redhen_relation_install() {
  // Add default relationships.
  $relation_types_info = array(
    array(
      'relation_type' => REDHEN_RELATION_CONNECTION,
      'label' => t('Personal connection'),
      'source_bundles' => array('redhen_contact:*'),
      'r_unique' => TRUE,
    ),
    array(
      'relation_type' => REDHEN_RELATION_AFFILIATION,
      'label' => t('Organizational affiliation'),
      'reverse_label' => t('Affiliated with'),
      'directional' => TRUE,
      'r_unique' => TRUE,
      'source_bundles' => array('redhen_contact:*'),
      'target_bundles' => array('redhen_org:*'),
    ),
  );
  foreach ($relation_types_info as $relation_type_info) {
    $relation_type = relation_type_create($relation_type_info);
    relation_type_save($relation_type);
  }

  // Add relation status field.
  $status_field = array(
    'field_name' => REDHEN_RELATION_STATUS_FIELD,
    'type' => 'list_boolean',
    'locked' => TRUE,
    'cardinality' => 1,
    'settings' => array(
      'allowed_values' => array('Inactive', 'Active')
    )
  );
  field_create_field($status_field);

  $bundles = array(
    REDHEN_RELATION_AFFILIATION => 'Affiliation Status',
    REDHEN_RELATION_CONNECTION => 'Connection Status'
  );
  foreach ($bundles as $key => $label) {
    field_create_instance(array(
      'field_name' => REDHEN_RELATION_STATUS_FIELD,
      'entity_type' => 'relation',
      'bundle' => $key,
      'label' => $label,
      'required' => 0,
      'default_value' => array(array('value' => 1)),
      'widget' => array(
        'type' => 'options_onoff',
        'settings' => array('display_label' => 1)
      )
    ));
  }

  // Add relation role field.
  $role_field = array(
    'field_name' => REDHEN_RELATION_ROLES_FIELD,
    'type' => 'list_text',
    'locked' => TRUE,
    'cardinality' => 1,
    'settings' => array(
      'allowed_values' => array('Admin', 'Member')
    )
  );
  field_create_field($role_field);

  field_create_instance(array(
    'field_name' => REDHEN_RELATION_ROLES_FIELD,
    'entity_type' => 'relation',
    'bundle' => REDHEN_RELATION_AFFILIATION,
    'label' => 'Organization Role',
    'required' => 1,
    'default_value' => array(array('value' => 1)),
    'widget' => array(
      'type' => 'options_select',
    ),
    'description' => t('This is a placeholder field to control what actions a contact in an organization can perform. Access control to be implemented.')
  ));

  entity_info_cache_clear();

  // Create default Amdin and Member roles.
  $default_roles = array(
    'admin' => array(
      'name' => 'admin',
      'label' => 'Admin',
      'permissions' => array(
        'add_relation' => 'add_relation',
        'edit_relation' => 'edit_relation',
        'delete_relation' => 'delete_relation',
      ),
      'default_role' => 0,
    ),
    'member' => array(
      'name' => 'member',
      'label' => 'Member',
      'permissions' => array(),
      'default_role' => 1,
    ),
  );
  foreach ($default_roles as $default_role) {
    $relation_role = entity_create('redhen_relation_role', $default_role);
    $relation_role->save();
  }
}

/**
 * Implements hook_uninstall().
 */
function redhen_relation_uninstall() {

  // Get all the relationship_types (bundles), find all fields
  // delete them.
  $query = db_select('relation_bundles', 'rb')
    ->fields('rb', array('relation_type'))
    ->condition('rb.entity_type', 'redhen_contact')
    ->distinct()
    ->execute();

  while ($record = $query->fetchAssoc()) {
    $relationship_type[] = $record['relation_type'];
  }

  foreach ($relationship_type as $type) {
    // Look into the database for each type.
    $relationship_query = db_select('relation', 'r')
      ->fields('r', array('rid'))
      ->condition('r.relation_type', $type)
      ->execute();

    while ($result = $relationship_query->fetchAssoc()) {
      // Delete all the relationships of that type.
      relation_delete($result['rid']);
    }
    // Finally delete the relationshp_type.
    relation_type_delete($type);
  }

  // Delete status field.
  field_delete_field('redhen_relation_status');

  entity_info_cache_clear();
}

/**
 * Remove old relation role field and add new.
 */
function redhen_relation_update_7001() {
  // Remove old relation role field.
  $instance = field_info_instance(
    'relation',
    REDHEN_RELATION_ROLES_FIELD,
    REDHEN_RELATION_AFFILIATION
  );
  field_delete_instance($instance, $field_cleanup = TRUE);
  field_delete_field(REDHEN_RELATION_ROLES_FIELD);
  field_purge_batch(5);
  // Add new relation role field.
  $field = array(
    'field_name' => REDHEN_RELATION_ROLES_FIELD,
    'type' => 'entityreference',
    'cardinality' => 1,
    'settings' => array(
      'target_type' => 'redhen_relation_role',
      'target_bundles' => array('redhen_relation_role'),
    ),
  );
  field_create_field($field);
  $instance = array(
    'field_name' => REDHEN_RELATION_ROLES_FIELD,
    'entity_type' => 'relation',
    'bundle' => REDHEN_RELATION_AFFILIATION,
    'required' => 1,
    'label' => 'Organization Role',
    'widget' => array(
      'type' => 'options_select',
    ),
  );
  field_create_instance($instance);

  entity_info_cache_clear();
}