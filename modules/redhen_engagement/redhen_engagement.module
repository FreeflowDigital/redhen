<?php

/**
 * @file
 * RedhenEngagement hook implementations and API
 */

/**
 * Implements hook_entity_info().
 */
function redhen_engagement_entity_info() {
  $info = array();

  $info['redhen_engagement'] = array(
    'label' => t('Engagement'),
    'plural label' => t('Engagements'),
    'controller class' => 'EntityAPIController',
    'metadata controller class' => 'RedhenEngagementMetadataController',
    'entity class' => 'RedhenEngagement',
    'base table' => 'redhen_engagement',
    'fieldable' => FALSE,
    'entity keys' => array(
      'id' => 'engagement_id',
    ),
    'bundle keys' => array(
      'bundle' => 'name',
    ),
    'bundles' => array(
      'redhen_engagement' => array(
        'label' => 'Engagements',
      ),
    ),
    'view modes' => array(
      'full' => array(
        'label' => t('Full engagement'),
        'custom settings' => FALSE,
      ),
    ),
    'uri callback' => 'entity_class_uri',
    'token type' => 'redhen_engagement',
    'module' => 'redhen_engagement',
    'label callback' => 'entity_class_label'
  );

  $info['redhen_engagement_score'] = array(
    'label' => t('Engagement Score'),
    'plural label' => t('Engagement Scores'),
    'controller class' => 'EntityAPIControllerExportable',
    'entity class' => 'RedhenEngagementScore',
    'base table' => 'redhen_engagement_score',
    'fieldable' => FALSE,
    'entity keys' => array(
      'id' => 'engagement_score_id',
      'label' => 'label',
      'name' => 'name',
    ),
    'bundles' => array(
      'redhen_engagement_score' => array(
        'label' => 'Engagement Scores',
      ),
    ),
    'admin ui' => array(
      'path' => 'admin/structure/redhen/engagement_scores',
      'file' => 'redhen_engagement.admin.inc',
      'file path' => drupal_get_path('module', 'redhen_engagement') . '/includes',
      'controller class' => 'RedhenEngagementScoreUIController',
    ),
    'token type' => 'redhen_engagement_score',
    'module' => 'redhen_engagement',
    'access callback' => 'redhen_engagement_access',
    'exportable' => TRUE
  );

  return $info;
}

/**
 * Implements hook_menu().
 */
function redhen_engagement_menu() {
  $items = array();

  foreach (redhen_entity_types() as $entity_type => $path) {
    $items["redhen/{$path}/%{$entity_type}/engagements"] = array(
      'title' => 'Engagements',
      'page callback' => 'redhen_engagements_page',
      'page arguments' => array(2, $entity_type),
      'access callback' => $entity_type . '_access',
      'access arguments' => array('view', 2),
      'type' => MENU_LOCAL_TASK,
    );
  }

  return $items;
}

function redhen_engagements_page($entity, $entity_type) {
  return 'Future home of engagements.';
}

function redhen_engagement_access() {
  return TRUE;
}

/**
 * Gets an array of all engagement scores, keyed by the name.
 *
 * @param $name
 *   If set, the type with the given name is returned.
 */
function redhen_engagement_get_scores($name = NULL) {
  $types = entity_load_multiple_by_name('redhen_engagement_score', isset($name) ? array($name) : FALSE);
  return isset($name) ? reset($types) : $types;
}

/**
 * Creates a new RedhenEngagement object.
 *
 * @param $engagement_score_name
 *   Machine name of an engagement score
 * @param $contact_id
 * @param $description
 * @param null $entity_type
 *   Optional source entity type.
 * @param null $entity_id
 *   Optional source entity id.
 *
 * @return RedhenEngagementScore
 */
function redhen_engagement_create($engagement_score_name, $contact_id, $description, $entity_type = NULL, $entity_id = NULL) {
  $engagement_score = redhen_engagement_get_scores($engagement_score_name);
  global $user;
  return new RedhenEngagement(array(
    'engagement_score_id' => $engagement_score->internalIdentifier(),
    'contact_id' => $contact_id,
    'description' => $description,
    'entity_type' => $entity_type,
    'entity_id' => $entity_id,
    'author_uid' => $user->uid
  ));
}

/**
 * Saves a Redhen Engagement
 *
 * @param RedhenEngagement $engagement
 * @return mixed
 */
function redhen_engagement_save(RedhenEngagement $engagement) {
  return $engagement->save();
}
